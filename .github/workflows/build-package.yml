name: build-package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      platform:
        description: '选择构建平台'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - linux
          - macos
          - cross-platform

env:
  DEB_PKGS: >-
    g++ meson appstream gettext libgoogle-glog-dev libgtk-3-dev libglib2.0-dev
    libjsoncpp-dev libsigc++-2.0-dev libayatana-appindicator3-dev
    dpkg-dev debhelper devscripts
  MAC_PKGS: >-
    meson appstream gettext glog gtk+3 jsoncpp gtk-mac-integration libsigc++@2
    create-dmg

jobs:
  build-cross-platform:
    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'cross-platform'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu20.04
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          install: |
            apt-get update -q -y
            apt-get install -q -y ${{ env.DEB_PKGS }}
          run: |
            meson setup build \
                --buildtype=release

            # 使用 ninja 替代 meson compile
            ninja -C build

            # 创建安装目录并安装
            mkdir -p pkg
            DESTDIR=$(pwd)/pkg meson install -C build

            # 准备打包
            VERSION=$(git describe --tags --always)
            ARCH=${{ matrix.arch }}
            
            # 创建 DEBIAN 控制目录
            mkdir -p pkg/DEBIAN
            
            # 创建 control 文件
            cat > pkg/DEBIAN/control << EOF
            Package: iptux
            Version: ${VERSION}
            Architecture: ${ARCH}
            Maintainer: Your Name <your.email@example.com>
            Depends: libgtk-3-0, libglib2.0-0, libjsoncpp25, libsigc++-2.0-0, libayatana-appindicator3-1
            Description: IP Messenger client for Linux
             A modern IP Messenger client for Linux.
             It is compatible with IP Messenger for Windows.
            EOF

            # 构建 deb 包
            dpkg-deb --build pkg
            
            # 移动并重命名 deb 包
            mv pkg.deb /artifacts/iptux-${VERSION}-${{ matrix.distro }}-${{ matrix.arch }}.deb

            # 同时保留安装目录结构
            cp -r pkg /artifacts/iptux-${{ matrix.distro }}-${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: iptux-${{ matrix.distro }}-${{ matrix.arch }}
          path: |
            artifacts/iptux-${{ matrix.distro }}-${{ matrix.arch }}
            artifacts/iptux-*-${{ matrix.distro }}-${{ matrix.arch }}.deb
          retention-days: 7

  build-on-mac:
    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'macos'
    strategy:
      matrix:
        os: [macos-latest, macos-13, macos-12]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure Homebrew cache
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Homebrew
          key: ${{ runner.os }}-${{ matrix.os }}-v1
      - name: brew install
        run: brew install --display-times ${{ env.MAC_PKGS }}
      - name: Build
        run: |
          meson setup build \
              --default-library=static \
              -Db_coverage=false \
              -Dwerror=false \
              -Dbuildtype=release \
              -Dwarning_level=0

          # 编译主程序
          meson compile -C build
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: iptux-${{ matrix.os }}
          path: build/src/main/iptux
          retention-days: 7
